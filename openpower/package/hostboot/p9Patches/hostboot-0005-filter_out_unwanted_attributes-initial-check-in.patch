From 0e0e28e214d7277698a781d271a846b81ebbd834 Mon Sep 17 00:00:00 2001
From: Prachi Gupta <pragupta@us.ibm.com>
Date: Tue, 6 Dec 2016 17:09:35 -0600
Subject: [PATCH 2/4] filter_out_unwanted_attributes:initial check-in

script to remove any unwanted attributes from mrw xml
based on target_types

Change-Id: Ic8965134a122a2561383481128036245ce158c02
---
 .../common/filter_out_unwanted_attributes.pl       | 145 +++++++++++++++++++++
 1 file changed, 145 insertions(+)
 create mode 100755 src/usr/targeting/common/filter_out_unwanted_attributes.pl

diff --git a/src/usr/targeting/common/filter_out_unwanted_attributes.pl b/src/usr/targeting/common/filter_out_unwanted_attributes.pl
new file mode 100755
index 0000000..8f2a69f
--- /dev/null
+++ b/src/usr/targeting/common/filter_out_unwanted_attributes.pl
@@ -0,0 +1,145 @@
+#! /usr/bin/perl
+# IBM_PROLOG_BEGIN_TAG
+# This is an automatically generated prolog.
+#
+# $Source: src/usr/targeting/common/filter_out_unwanted_attributes.pl $
+#
+# OpenPOWER HostBoot Project
+#
+# Contributors Listed Below - COPYRIGHT 2016
+#
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
+# implied. See the License for the specific language governing
+# permissions and limitations under the License.
+#
+# IBM_PROLOG_END_TAG
+
+use strict;
+use XML::Simple;
+use XML::LibXML;
+use XML::Parser;
+use Data::Dumper;
+use feature "state";
+use Getopt::Long qw(GetOptions);
+
+my @tgt_files;
+my $mrw_file;
+
+GetOptions(
+    "tgt-xml=s"    => \@tgt_files,
+    "mrw-xml=s"    => \$mrw_file,
+);
+
+if ((scalar @tgt_files eq 0) || ($mrw_file eq ""))
+{
+    print "ERROR: tgt-xml or mrw-xml is not specified\n";
+    print "tgt-xml: \n";
+    print Dumper @tgt_files;
+    print "mrw-xml: $mrw_file\n";
+    exit (-1);
+}
+
+$XML::Simple::PREFERRED_PARSER = 'XML::Parser';
+
+#Load all the attr-files
+my @tgt_xmls;
+foreach my $i (0 .. $#tgt_files)
+{
+    my $tgt_file  = $tgt_files[$i];
+    print "Loading TGT XML: $tgt_file in $i\n";
+
+    $tgt_xmls[$i] =
+           XMLin($tgt_file,
+                forcearray => ['attribute', 'targetType', 'field']);
+}
+
+#Load MRW XML
+$XML::LibXML::skipXMLDeclaration = 1;
+print "Loading MRW XML: $mrw_file\n";
+my $parser = XML::LibXML->new();
+my $mrw_parsed = $parser->parse_file($mrw_file);
+
+foreach my $tgt
+    ($mrw_parsed->findnodes('/attributes/targetInstance'))
+{
+    my $tgt_type = $tgt->findnodes('./type');
+    foreach my $attr ($tgt->findnodes('./attribute'))
+    {
+        my $attr_id = $attr->findnodes('./id');
+        my $found = findAttribute($tgt_type, $attr_id);
+        if ($found eq 0)
+        {
+            print "Target: $tgt_type Attr: $attr_id\n";
+            $tgt->removeChild($attr);
+        }
+    }
+}
+
+
+sub findAttribute
+{
+    my $tgt  = shift;
+    my $attr = shift;
+    foreach my $i (0 .. $#tgt_xmls)
+    {
+        my $tgt_xml = $tgt_xmls[$i];
+        if (defined $tgt_xml->{targetType}{$tgt}{attribute}{$attr})
+        {
+            return 1;
+        }
+        else
+        {
+            my %tgt_hash = %$tgt_xml;
+            if (lookAtParentAttributes (\%tgt_hash, $tgt, $attr) eq 1)
+            {
+                return 1;
+            }
+        }
+    }
+    return 0;
+}
+
+sub lookAtParentAttributes
+{
+    my ($tgt_xml, $tgt, $attr) = @_;
+
+    my $parent = $tgt_xml->{targetType}{$tgt}{parent};
+
+    if ($parent eq "")
+    {
+        return 0;
+    }
+    elsif ($parent eq "base")
+    {
+         return (defined  $tgt_xml->{targetType}{$parent}{attribute}{$attr}) ?
+                        1 : 0;
+    }
+    else
+    {
+        if (defined  $tgt_xml->{targetType}{$parent}{attribute}{$attr})
+        {
+            return 1;
+        }
+        else
+        {
+            my %tgt_hash = %$tgt_xml;
+            return lookAtParentAttributes(\%tgt_hash, $parent, $attr);
+        }
+    }
+}
+#OUTPUT
+my $xml_fh;
+my $filename = $mrw_file . ".updated";
+print "Creating XML: $filename\n";
+open($xml_fh, ">$filename") || die "Unable to create: $filename";
+print {$xml_fh} $mrw_parsed->toString();
+close($xml_fh);
-- 
1.8.2.2

